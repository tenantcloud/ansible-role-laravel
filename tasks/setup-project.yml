---
- name: Install PyMySQL
  pip:
    name: pymysql
    executable: pip3
  become: true
  when: ansible_distribution == 'Ubuntu'

- name: Create database
  mysql_db:
    login_user: "{{ mysql_admin_user }}"
    login_password: "{{ mysql_admin_password }}"
    name: "{{ mysql_database }}"
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Create database user
  mysql_user:
    login_user: "{{ mysql_admin_user }}"
    login_password: "{{ mysql_admin_password }}"
    name: "{{ mysql_db_user }}"
    password: "{{ mysql_db_user_pass }}"
    priv: '{{ mysql_database }}.*:ALL'
    state: present

- name: Composer install
  composer:
    command: require
    working_dir: /var/www/html/{{ work_dir }}
  when: ansible_distribution == 'Ubuntu'

- name: Ensure Nodejs dependencies are present.
  apt:
    name:
      - apt-transport-https
      - gnupg2
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Add NodeSource apt key.
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present
  become: true
  when: ansible_distribution == 'Ubuntu'

- name: Add NodeSource repositories for Node.js.
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
    - "deb-src https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
  become: true
  register: node_repo
  when: ansible_distribution == 'Ubuntu'

- name: Update apt cache if repo was added.
  apt: update_cache=yes
  when: node_repo.changed
  tags: ['skip_ansible_lint']
  become: true
  when: ansible_distribution == 'Ubuntu'

- name: Ensure Node.js and npm are installed.
  apt:
    name: "nodejs={{ nodejs_version|regex_replace('x', '') }}*"
    state: present
  become: true
  when: ansible_distribution == 'Ubuntu'

- name: Run npm ci
  npm:
    ci: yes
    path: /var/www/html/{{ work_dir }}
  when: ansible_distribution == 'Ubuntu'

- name: Copy nginx config file
  template:
    src: "{{ work_domain }}.conf"
    dest: "/etc/nginx/sites-enabled/"
  notify: Restart Nginx
